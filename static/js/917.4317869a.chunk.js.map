{"version":3,"file":"static/js/917.4317869a.chunk.js","mappings":"qQAEaA,EAAUC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yDAIpBC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4KASpBG,EAAWL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2B,SC2CjC,EAjDiB,WACf,IAAAK,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAElBG,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,IAfAE,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACXI,MAAM,sCAADC,OACmCJ,EAAO,qEAE5CK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IACtBF,MAAK,SAAAG,GACJ,IAAQd,EAASc,EAATd,KACRC,EAAQD,EACV,IACCe,OAAM,WACLC,EAAAA,GAAAA,MAAY,uBACd,IACCC,SAAQ,kBAAMZ,GAAW,EAAM,GACpC,GAAG,CAACC,IACAF,EACF,OAAOc,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAMhB,OAAOnB,EAAKoB,QACVF,EAAAA,EAAAA,KAAC9B,EAAO,CAAAiC,UACNH,EAAAA,EAAAA,KAAC1B,EAAQ,CAAA6B,SACNrB,EAAKsB,KAAI,SAAAC,GAAA,IAAGC,EAAID,EAAJC,KAAMC,EAASF,EAATE,UAAWC,EAAYH,EAAZG,aAAY,OACxCC,EAAAA,EAAAA,MAACjC,EAAQ,CAAA2B,SAAA,EACPH,EAAAA,EAAAA,KAAA,OACEU,IAAOF,EARF,mCAQ4BA,EAT3C,gEAUUG,IAAKL,KAEPG,EAAAA,EAAAA,MAAA,KAAAN,SAAA,CAAG,UAAQG,MACXG,EAAAA,EAAAA,MAAA,KAAAN,SAAA,CAAG,cAAYI,OANFD,EAOJ,SAKjBN,EAAAA,EAAAA,KAAC9B,EAAO,CAAAiC,UACNH,EAAAA,EAAAA,KAAA,KAAAG,SAAG,wBAGT,C","sources":["pages/CastPage/CastPage.styled.js","pages/CastPage/CastPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.div`\n  padding-top: 25px;\n  padding-bottom: 25px;\n`;\nexport const CastList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  @media screen and (min-width: 1200px) {\n    justify-content: flex-start;\n  }\n`;\nexport const CastItem = styled.li`\n  width: 150px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from 'components/Loader/Loader';\n\nimport { Section, CastList, CastItem } from './CastPage.styled';\n\nconst CastPage = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    setLoading(true);\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=a1248d45d2e1e834899a3a4a26a86367&language=en-US`\n    )\n      .then(res => res.json())\n      .then(data => {\n        const { cast } = data;\n        setCast(cast);\n      })\n      .catch(() => {\n        toast.error('Something went wrong');\n      })\n      .finally(() => setLoading(false));\n  }, [movieId]);\n  if (loading) {\n    return <Loader />;\n  }\n  const NO_IMAGE =\n    'https://upload.wikimedia.org/wikipedia/en/6/60/No_Picture.jpg';\n  const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\n\n  return cast.length ? (\n    <Section>\n      <CastList>\n        {cast.map(({ name, character, profile_path }) => (\n          <CastItem key={name}>\n            <img\n              src={!!profile_path ? IMG_PATH + profile_path : NO_IMAGE}\n              alt={name}\n            />\n            <p>Actor: {name}</p>\n            <p>Character: {character}</p>\n          </CastItem>\n        ))}\n      </CastList>\n    </Section>\n  ) : (\n    <Section>\n      <p>Cast list is empty</p>\n    </Section>\n  );\n};\n\nexport default CastPage;\n"],"names":["Section","styled","_templateObject","_taggedTemplateLiteral","CastList","_templateObject2","CastItem","_templateObject3","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","movieId","useParams","useEffect","fetch","concat","then","res","json","data","catch","toast","finally","_jsx","Loader","length","children","map","_ref","name","character","profile_path","_jsxs","src","alt"],"sourceRoot":""}