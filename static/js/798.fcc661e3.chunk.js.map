{"version":3,"file":"static/js/798.fcc661e3.chunk.js","mappings":"mSAGaA,EAAUC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gCAGpBC,EAAQH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oFAMpBG,EAAML,EAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gRAcnBK,EAAaP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+BAGtBO,GAAiBT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAYW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,mI,SC8D1C,EA3EmB,WACjB,IAAAU,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA8BV,EAAAA,EAAAA,WAAS,GAAMW,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,EAAUN,EAAaO,IAAI,SAC3BC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACQ,KAAZJ,GAA8B,OAAZA,IAGtBD,GAAW,GACXM,MAAM,2GAADC,OACwGN,EAAO,gCAEjHO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IACtBF,MAAK,SAAAG,GACJ,IAAQC,EAAYD,EAAZC,QACHA,EAAQC,QACXC,EAAAA,GAAAA,MAAY,sCAEd,IAAMxB,EAASsB,EAAQG,KAAI,SAAAC,GAAqB,MAAQ,CACtDC,GAD8BD,EAAFC,GAE5BC,eAF8CF,EAAdE,eAGjC,IACD3B,EAAUD,EACZ,IACC6B,OAAM,WACLL,EAAAA,GAAAA,MAAY,uBACd,IACCM,SAAQ,kBAAMpB,GAAW,EAAM,IACpC,GAAG,CAACC,IAWJ,OAAIF,GACKsB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAIdC,EAAAA,EAAAA,MAAClD,EAAO,CAAAmD,SAAA,EACND,EAAAA,EAAAA,MAAA,QAAME,SAfW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACU,KAArBD,EAAKE,MAAMC,OAGfnC,EAAgB,CAAEkC,MAAOF,EAAKE,MAAMC,OACtC,EAQiCP,SAAA,EAC3BH,EAAAA,EAAAA,KAAC5C,EAAK,CACJuD,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEdf,EAAAA,EAAAA,KAAC1C,EAAG,CAACqD,KAAK,SAAQR,UAChBH,EAAAA,EAAAA,KAACgB,EAAAA,IAAe,CAACC,KAAK,YAGzBhD,EAAOuB,OAAS,IACfQ,EAAAA,EAAAA,KAACxC,EAAU,CAAA2C,SACRlC,EAAOyB,KAAI,SAAAwB,GAAA,IAAGtB,EAAEsB,EAAFtB,GAAIC,EAAcqB,EAAdrB,eAAc,OAC/BG,EAAAA,EAAAA,KAAA,MAAAG,UACED,EAAAA,EAAAA,MAACxC,EAAc,CAACyD,MAAO,CAAEC,KAAMtC,GAAYuC,GAAE,WAAAnC,OAAaU,GAAKO,SAAA,EAC7DH,EAAAA,EAAAA,KAACsB,EAAAA,IAAY,CAACC,MAAO,CAAEC,aAAc,SACpC3B,MAHID,EAKJ,QAMjB,C","sources":["pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.div`\n  padding-top: 25px;\n`;\nexport const Input = styled.input`\n  width: 300px;\n  height: 40px;\n  padding: 5px;\n  margin-right: 10px;\n`;\nexport const Btn = styled.button`\n  @media screen and (max-width: 768px) {\n    margin-top: 10px;\n  }\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: transparent;\n  border: 2px solid #3b5998;\n  &:hover {\n    cursor: pointer;\n    background-color: #3b5998;\n  }\n`;\nexport const MoviesList = styled.ul`\n  margin-top: 20px;\n`;\nexport const MoviesListItem = styled(Link)`\n  color: black;\n  display: flex;\n  align-items: center;\n  &:hover {\n    color: #3b5998;\n    font-weight: 500;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { RiMovie2Line } from 'react-icons/ri';\nimport Loader from 'components/Loader/Loader';\nimport {\n  Section,\n  Input,\n  Btn,\n  MoviesList,\n  MoviesListItem,\n} from './MoviesPage.styled';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const keyword = searchParams.get('query');\n  const location = useLocation();\n  useEffect(() => {\n    if (keyword === '' || keyword === null) {\n      return;\n    }\n    setLoading(true);\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=a1248d45d2e1e834899a3a4a26a86367&language=en-US&query=${keyword}&page=1&include_adult=false`\n    )\n      .then(res => res.json())\n      .then(data => {\n        const { results } = data;\n        if (!results.length) {\n          toast.error('Try again with another search word');\n        }\n        const movies = results.map(({ id, original_title }) => ({\n          id,\n          original_title,\n        }));\n        setMovies(movies);\n      })\n      .catch(() => {\n        toast.error('Something went wrong');\n      })\n      .finally(() => setLoading(false));\n  }, [keyword]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (form.query.value === '') {\n      return;\n    }\n    setSearchParams({ query: form.query.value });\n  };\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <Section>\n      <form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <Btn type=\"submit\">\n          <AiOutlineSearch size=\"20\" />\n        </Btn>\n      </form>\n      {movies.length > 0 && (\n        <MoviesList>\n          {movies.map(({ id, original_title }) => (\n            <li key={id}>\n              <MoviesListItem state={{ from: location }} to={`/movies/${id}`}>\n                <RiMovie2Line style={{ paddingRight: '2px' }} />\n                {original_title}\n              </MoviesListItem>\n            </li>\n          ))}\n        </MoviesList>\n      )}\n    </Section>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["Section","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","Btn","_templateObject3","MoviesList","_templateObject4","MoviesListItem","Link","_templateObject5","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","loading","setLoading","keyword","get","location","useLocation","useEffect","fetch","concat","then","res","json","data","results","length","toast","map","_ref","id","original_title","catch","finally","_jsx","Loader","_jsxs","children","onSubmit","e","preventDefault","form","currentTarget","query","value","type","name","autoComplete","autoFocus","placeholder","AiOutlineSearch","size","_ref2","state","from","to","RiMovie2Line","style","paddingRight"],"sourceRoot":""}